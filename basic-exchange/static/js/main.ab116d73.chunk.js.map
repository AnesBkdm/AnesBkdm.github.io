{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/Header/logo.svg","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Section","styled","section","AccountBalance","props","buttonText","showBalance","balanceAmount","amount","onClick","handleHide","Td","td","Coin","name","ticker","price","balance","action","method","event","preventDefault","handleRefresh","tickerId","console","log","Table","table","CoinList","coinData","map","key","Img","img","Headerr","header","H1","h1","Header","src","logo","alt","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","className","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab116d73.chunk.js","sourcesContent":["//Don't forget the vulnerabilities in the NPM packages\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AccountBalance.css';\n\nimport styled from 'styled-components';\n\nconst Section = styled.section`\n    font-size: 2rem;\n    text-align: left;\n    padding: 1.5rem 0 1.5rem 5rem;\n`;\n\nexport default function AccountBalance(props) {\n\n\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\n    let balanceAmount = null;\n\n    if(props.showBalance){\n        balanceAmount = <>${props.amount}</>;\n    } else {\n        balanceAmount = null;\n    }\n\n    // const balanceAmount = this.props.showBalance ? '$'+this.props.amount : '';\n    return (\n        <Section>\n            {balanceAmount}\n            <button onClick={props.handleHide}>{buttonText}</button>\n        </Section>\n    );\n\n}\n\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Td = styled.td`\n    border: 1px solid #cccccc;\n    width: 25vh;   \n`;\n\nexport default function Coin(props){\n\n    const handleClick = (event) => {\n        //Prevent the default action of refresh first\n        event.preventDefault();\n        props.handleRefresh(props.tickerId);\n        console.log('o')\n    }\n\n    return (\n        <tr>\n                <Td>{props.name}</Td>\n                <Td>{props.ticker}</Td>\n                <Td>${props.price}</Td>\n                {props.showBalance ? <Td>${props.balance}</Td> : null}\n                <Td>\n                    <form action='#' method='POST'>\n                        <button onClick={handleClick}>Refresh</button>\n                    </form>\n                </Td>\n        </tr>\n    );\n    }\n\nCoin.propTypes = {\n    name: PropTypes.string.isRequired,\n    ticker: PropTypes.string,\n    price: PropTypes.number\n}","import React from 'react';\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n    margin: 50px auto 50px auto;\n    display: inline-block;\n    font-size: 1.4rem;\n`;\n\nexport default function CoinList (props) {\n\n  return (\n      <Table>\n      <thead>\n          <tr>\n              <th>Name</th>\n              <th>Ticker</th>\n              <th>Price</th>\n              {props.showBalance ? <th>Balance</th> : null}\n              <th>Action</th>\n          </tr>\n      </thead>\n      <tbody>\n        {\n          props.coinData.map(({key, name, ticker, price, balance}) => \n            <Coin key={key}\n                  handleRefresh={props.handleRefresh}\n                  name={name}\n                  ticker={ticker}\n                  handleHide={props.handleHide}\n                  showBalance={props.showBalance}\n                  balance={balance}\n                  price={price}\n                  tickerId={key}\n            />\n          )\n        }\n      </tbody>\n        \n    </Table>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport styled from 'styled-components';\n\nconst Img = styled.img`\n    height: 8rem;\n    pointer-events: none;\n`;\n\nconst Headerr = styled.header`\n    background-color: #282c34;\n    min-height: 10vh;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    font-size: calc(10px + 2vmin);\n    color: white;\n`;\n\nconst H1 = styled.h1`\n    font-size: 4rem;\n`;\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <Headerr>\n                <Img src={logo} alt='react logo'/>\n                    <H1>\n                        Coin Exchange\n                    </H1>\n            </Headerr>\n        )\n    }\n}\n","import React, {useState, useEffect} from 'react';\nimport AccountBalance from './components/AccountBalance/AccountBalance'\nimport CoinList from './components/CoinList/CoinList';\nimport Header from './components/Header/Header'\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n/**\n* Practice CSS at Flexbox Zombies, CSS Diner\n* CSS cheat sheet for commands\n*/\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(120, 120, 173);\n  color: #cccccc;\n`;\n\nconst formatPrice = price => parseFloat(Number(price).toFixed(2));\nconst COIN_COUNT = 10;\n\nfunction App(props) {\n  \n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n\n  // Avoid temporal deadzone by putting exe functions first\n  const componentDidMount = async () => {\n    \n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id)); // axios.get returns a promise\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response){\n      const coin = response.data;\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price)\n      }\n    })\n\n    // Retrieving prices\n    // this.setState({coinData: coinPriceData});\n    setCoinData(coinPriceData);\n  };\n\n  useEffect(function() { // WARNING: useEffect cannot be Async\n    if(coinData.length === 0){\n      // componentDidMount here\n      componentDidMount();\n    } else {\n      // componentDidUpdate here\n    }\n  });\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n\n    const response = await axios.get(tickerUrl);\n    console.log(response);\n\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    console.log(newPrice);\n\n    const newCoinData = coinData.map( function(values) {\n\n      let newValues = {...values};\n\n      if (valueChangeId === values.key) {\n        newValues.price = newPrice;\n      }\n\n      return newValues;\n    });\n\n    // this.setState({coinData: newCoinData});\n    setCoinData(newCoinData);\n  };\n\n  const handleHide = () => {\n    setShowBalance(oldValue => !oldValue);\n  };\n\n\n  return (\n    <Div className=\"App\">\n      <Header />\n      <AccountBalance amount={balance}\n                      handleHide={handleHide} \n                      showBalance={showBalance}\n      />\n      <CoinList coinData={coinData} \n                handleRefresh={handleRefresh}\n                showBalance={showBalance} />\n    </Div>\n  );\n\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}